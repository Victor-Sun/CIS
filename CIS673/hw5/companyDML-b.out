SQL> -- ------------------------------------------------------------
SQL> --
SQL> -- Name: Victor Sun
SQL> --
SQL> -- -------------------------------------------------------------
SQL> --
SQL> -- NULL AND SUBSTRINGS -------------------------------
SQL> --
SQL> /*(10B)
SQL> Find the ssn and last name of every employee whose ssn contains two consecutive 8's, and has a supervisor. Sort the results by ssn.
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT SSN, LNAME
  2  FROM EMPLOYEE
  3  WHERE SUPER_SSN IS NOT NULL AND SSN LIKE '%88%'
  4  ORDER BY SSN;

SSN       LNAME                                                                 
--------- ---------------                                                       
666884444 Narayan                                                               
999887777 Zelaya                                                                

SQL> -- JOINING 3 TABLES ------------------------------
SQL> --
SQL> /*(11B)
SQL> For every employee who works for more than 20 hours on any project that is controlled by the research department: Find the ssn, project number,  and number of hours. Sort the results by ssn.
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT T1.ESSN, T1.PNO, T1.HOURS
  2  FROM WORKS_ON T1, DEPARTMENT T2, PROJECT T3
  3  WHERE T1.PNO = T3.PNUMBER AND T2.DNUMBER = T3.DNUM AND T1.HOURS > 20 AND T2.DNAME = 'Research'
  4  ORDER BY T1.ESSN;

ESSN             PNO      HOURS                                                 
--------- ---------- ----------                                                 
123456789          1       32.5                                                 
666884444          3         40                                                 

SQL> -- JOINING 3 TABLES ---------------------------
SQL> --
SQL> /*(12B)
SQL> Write a query that consists of one block only.
SQL> For every employee who works less than 10 hours on any project that is controlled by the department he works for: Find the employee's lname, his department number, project number, the number of the department controlling it, and the number of hours he works on that project. Sort the results by lname.
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT T1.LNAME, T1.DNO, T2.PNUMBER, T2.DNUM, T3.Hours
  2  FROM EMPLOYEE T1, PROJECT T2, WORKS_ON T3
  3  WHERE T1.DNO = T2.DNUM AND T2.PNUMBER = T3.PNO AND T1.SSN = T3.ESSN AND T3.HOURS < 10
  4  ORDER BY T1.LNAME;

LNAME                  DNO    PNUMBER       DNUM      HOURS                     
--------------- ---------- ---------- ---------- ----------                     
Jabbar                   4         30          4          5                     
Smith                    5          2          5        7.5                     

SQL> -- JOINING 4 TABLES -------------------------
SQL> --
SQL> /*(13B)
SQL> For every employee who works on any project that is located in Houston: Find the employees ssn and lname, and the names of his/her dependent(s) and their relationship(s) to the employee. Notice that there will be one row per qualyfing dependent. Sort the results by employee lname.
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT DISTINCT T1.LNAME, T2.DEPENDENT_NAME, T2.RELATIONSHIP
  2  FROM EMPLOYEE T1, DEPENDENT T2, PROJECT T3, WORKS_ON T4
  3  WHERE T1.SSN = T2.ESSN AND T1.SSN = T4.ESSN AND T4.PNO = T3.PNUMBER AND T3.PLOCATION = 'Houston'
  4  ORDER BY T1.LNAME;

LNAME           DEPENDENT_NAME  RELATION                                        
--------------- --------------- --------                                        
Wallace         Abner           Spouse                                          
Wong            Alice           Daughter                                        
Wong            Joy             Spouse                                          
Wong            Theodore        Son                                             

SQL> -- SELF JOIN -------------------------------------------
SQL> --
SQL> /*(14B)
SQL> Write a query that consists of one block only.
SQL> For every employee who works for a department that is different from his supervisor's department: Find his ssn, lname, department number; and his supervisor's ssn, lname, and department number. Sort the results by ssn.
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT T1.SSN, T1.LNAME, T1.DNO, T2.SSN, T2.LNAME, T2.DNO
  2  FROM EMPLOYEE T1, EMPLOYEE T2
  3  WHERE T1.SUPER_SSN = T2.SSN AND T1.DNO <> T2.DNO
  4  ORDER BY T1.SSN;

SSN       LNAME                  DNO SSN       LNAME                  DNO       
--------- --------------- ---------- --------- --------------- ----------       
333445555 Wong                     5 888665555 Borg                     1       
987654321 Wallace                  4 888665555 Borg                     1       

SQL> -- USING MORE THAN ONE RANGE VARIABLE ON ONE TABLE -------------------
SQL> --
SQL> /*(15B)
SQL> Find pairs of employee lname's such that the two employees in the pair work on the same project for the same number of hours. List every pair once only. Sort the result by the lname in the left column in the result.
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT T1.LNAME, T2.LNAME
  2  FROM EMPLOYEE T1, EMPLOYEE T2, WORKS_ON T3, WORKS_ON T4
  3  WHERE T1.SSN = T3.ESSN AND T2.SSN = T4.ESSN AND T3.PNO = T4.PNO AND T3.HOURS = T4.HOURS AND T1.SSN < T2.SSN
  4  ORDER BY T1.LNAME;

LNAME           LNAME                                                           
--------------- ---------------                                                 
Wong            Zelaya                                                          

SQL> /*(16B)
SQL> For every employee who has more than one dependent: Find the ssn, lname, and number of dependents. Sort the result by lname
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT T1.SSN, T1.LNAME, COUNT(*) AS DEPENDENT_COUNT
  2  FROM EMPLOYEE T1, DEPENDENT T2
  3  WHERE T1.SSN = T2.ESSN
  4  GROUP BY T1.SSN, T1.LNAME
  5  HAVING COUNT(*) > 1
  6  ORDER BY T1.LNAME;

SSN       LNAME           DEPENDENT_COUNT                                       
--------- --------------- ---------------                                       
123456789 Smith                         3                                       
333445555 Wong                          3                                       

SQL> /*(17B)
SQL> For every project that has more than 2 employees working on it and the total hours worked on it is less than 40: Find the project number, project name, number of employees working on it, and the total number of hours worked by all employees on that project. Sort the results by project number.
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT T1.PNO, T3.PNAME,COUNT(T2.SSN) AS EMPLOYEE_COUNT, SUM(T1.HOURS) AS TOTAL_HOURS
  2  FROM WORKS_ON T1, EMPLOYEE T2, PROJECT T3
  3  WHERE T1.ESSN = T2.SSN AND T1.PNO = T3.PNUMBER
  4  GROUP BY T1.PNO, T3.PNAME
  5  HAVING COUNT(T2.SSN) > 2 AND SUM(T1.HOURS) < 40
  6  ORDER BY T1.PNO;

       PNO PNAME           EMPLOYEE_COUNT TOTAL_HOURS                           
---------- --------------- -------------- -----------                           
         2 ProductY                     3        37.5                           
        20 Reorganization               3          25                           

SQL> -- CORRELATED SUBQUERY --------------------------------
SQL> --
SQL> /*(18B)
SQL> For every employee whose salary is above the average salary in his department: Find the dno, ssn, lname, and salary. Sort the results by department number.
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT T1.DNO, T1.SSN, T1.LNAME
  2  FROM EMPLOYEE T1
  3  WHERE T1.SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE T2 GROUP BY DNO HAVING T1.DNO = T2.DNO);

       DNO SSN       LNAME                                                      
---------- --------- ---------------                                            
         5 333445555 Wong                                                       
         4 987654321 Wallace                                                    
         5 666884444 Narayan                                                    

SQL> -- CORRELATED SUBQUERY -------------------------------
SQL> --
SQL> /*(19B)
SQL> For every employee who works for the research department but does not work on any one project for more than 20 hours: Find the ssn and lname. Sort the results by lname
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT T1.SSN, T1.LNAME
  2  FROM EMPLOYEE T1
  3  WHERE EXISTS (SELECT * FROM DEPARTMENT T2, WORKS_ON T3 WHERE T1.SSN = T3.ESSN AND T1.DNO = T2.DNUMBER AND T2.DNAME = 'Research' AND  T3.HOURS <= 20)
  4  ORDER BY T1.LNAME;

SSN       LNAME                                                                 
--------- ---------------                                                       
453453453 English                                                               
123456789 Smith                                                                 
333445555 Wong                                                                  

SQL> -- DIVISION ---------------------------------------------
SQL> --
SQL> /*(20B) Hint: This is a DIVISION query
SQL> For every employee who works on every project that is controlled by department 4: Find the ssn and lname. Sort the results by lname
SQL> */
SQL> -- <<< Your SQL code goes here >>>
SQL> SELECT T1.SSN, T1.LNAME
  2  FROM EMPLOYEE T1
  3  WHERE NOT EXISTS(
  4  	     (SELECT T2.DNUMBER
  5  	     FROM DEPARTMENT T2
  6  	     WHERE T2.DNUMBER = 4)
  7  	     MINUS
  8  	     (SELECT T2.DNUMBER
  9  	     FROM DEPARTMENT T2, PROJECT T3
 10  	     WHERE T2.DNUMBER = T3.DNUM AND
 11  	     T1.DNO = T2.DNUMBER AND
 12  	     T2.DNUMBER = 4))
 13  ORDER BY T1.LNAME;

SSN       LNAME                                                                 
--------- ---------------                                                       
987987987 Jabbar                                                                
987654321 Wallace                                                               
999887777 Zelaya                                                                

SQL> --
SQL> SET ECHO OFF
